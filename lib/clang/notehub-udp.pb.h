/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.5 at Sun Sep 10 15:08:14 2023. */

#ifndef PB_NOTEHUB_UDP_PB_H_INCLUDED
#define PB_NOTEHUB_UDP_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef PB_BYTES_ARRAY_T(254) notelib_NotehubUdpPB_Payload_t;
typedef struct _notelib_NotehubUdpPB {
    bool has_Payload;
    notelib_NotehubUdpPB_Payload_t Payload;
/* @@protoc_insertion_point(struct:notelib_NotehubUdpPB) */
} notelib_NotehubUdpPB;

/* Default values for struct fields */

/* Initializer values for message structs */
#define notelib_NotehubUdpPB_init_default        {false, {0, {0}}}
#define notelib_NotehubUdpPB_init_zero           {false, {0, {0}}}

/* Field tags (for use in manual encoding/decoding) */
#define notelib_NotehubUdpPB_Payload_tag         1

/* Struct field encoding specification for nanopb */
extern const pb_field_t notelib_NotehubUdpPB_fields[2];

/* Maximum encoded size of messages (where known) */
#define notelib_NotehubUdpPB_size                257

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define NOTEHUB_UDP_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
