package notelib

import (
	"context"
	"encoding/hex"
	"fmt"
	"testing"
)

func TestMsgFromWire(t *testing.T) {

	// These are all real-world examples of corrupt buffers that came from devices, which were used to test the json_fixer.go code
	// that repairs them.  Repairing of these buffers is extremely important because, if HubRequest fails to parse them, this may
	// stop notecard/notehub sync dead in its tracks which will prevent environment variables from being downloaded, which will
	// block DFU and other important functionality such as notecard restart and interactive debugging via _req.qi.  If a buffer
	// fails this test, then json_fixer.go should be enhanced to repair it as best as possible, letting higher levels of the
	// software fail if the nature of the correction causes other issues.
	hexBuffers := []string{

		// dev:864049051604371
		"02076f0512016ea801ef0a03fc20e0020d0100012277223a31363438383530393401027b224e0322312c616c657274732e716f032263053136066203226e032273052266696c653a151e7c227d0468055b7b01320665052231227d5d047377697463685f73756d6d61727905411c75053306630533060944b86903044205227b5c226f66666c696e655f6d696e735c0531342c5c22636f756e745c0531322c5c227365636f6e6473110e34315c035c22636c6f7365645c05081d2c24312c5c226176676f706e0d2b0c64635c05051608646376110a1475725c05317d01560032fe48000d480033fe48000d480034fe48000d480035fe48000d480036ee48000948180722066605327d451a68227305337d2c7b7d5d046d6f646275735f726561645f504152414d4d1c0c340663055160551c0c523139384114202e312c5c225231393921dc007d2e580048770531373339333138303731067305347d2c7b321400387d5d046e6f7465626f785f74656d700d6d1035066305323e89020c636172640160056d18766f6c746167651510fea602d2a602007449ee45b60997046d6945df05a3086d6178159f08617667150c0866696c653d002efeea0232ea0200746932f68c000033ee5602495661be00740948f68c00fe72036d7200740948f68c000035fe18012d180948f68c00eefa036dfa25a40948f28c000c65787054251aae4600017d106578705248c23a0000072e59040873053546b104144348414e47458d45c1ce00353e4504446e616d655c055c2231305c222c5c2276616c89c042b5042431353730323434330673a51a85b511143c7d5d045f7265712e716973032263053715650007a94d387705313634303635383839367d5d04f58724032275053106630531311532ed651473746174757301990c36345c22568d00103338380673e11f1d8d083338383ab4050c464153543d0100343e6a0004523009f1a5b1190b00321d0b043033190d0837303781b9569200083434324a1f010032211f146865616c74680d8905f400303e8a000c7465787401f20031258a2525163308146d6574686f640d1b147d2206500531ddaac1522589083336354610011836357d5d04312c4adf0804630531760873221aa18504653a4226001a2809016420363734313539323433223309185f656e762e646225f3003915cd39f3119620387d5d0678055b7b22124909007d3e1302043730115205aa5670070863053131ba1ecd094e290032b0001830353136353437115e040431325c007d1b0863053151b34e5d00152a4a5e0000395a5e005576086305311e420a4e5c000d284a5a0000381d5a421208086305311e0f0811563a24000d5204013115470c5f6c6f675d80003835b26d73ee7f02457f043831467f0200380ed10804312c157c086305323eb9000d1c0db1456b18363139373032372e5d012e6004003191c611fc111d0d4400015552017b5da6003255f2000549f1111d0d39057d89a9003739394e7f01003311c608690304114d10646174612f2e87011c2d716f2e6a736f6e1d5e6d141038347d5d045a9503794b365a00369d036a5c00a16308312c31a18a00328d654275030036325c019d9d08630531511a11d8191f1dc93127990f325e034dd805842a260b1153252b2ec103013062d30008343137212f31e60155003331ca3e800101250c2d716973567901043431c11f36260e003291593e4b00a5820073629600c96b32f600952a01a3003251a63e58002ef800093262640004343121cd002c3982055991ad3e59000d27624e00c90d002c05445e6602005f41c10c66696c655a4201043336e1ee002c7139014c00334d6546900014656e762d6462624a00003925d6919708630532517a42d900086c6f6766d6008564328801005022a80d08630532b17f3e55002e870105316262002c3431357d5d7d04430533337d",

		// dev:868050045461353
		"0207820512016ea801820b0396216c02090113012277223a313637383301226c223a22595c753030303533090798027b224e0322312c616c657274732e716f032263053136066203226e032273052266696c653a61111e90227d0468055b7b0137313032370665052231227d5d047377697463685f73756d6d6172792e014518750533066305330d48b86903044205227b5c226f66666c696e655f6d696e735c0531342c5c22636f756e745c0531322c5c227365636f6e6473110e34315c035c22636c6f7365645c05081d2c24312c5c226176676f706e0d2b0c64635c05051608646376110a1475725c05317d01560032fe48000d480033fe48000d480034fe48000d480035fe48000d480036ee48000948180722066605327d451e68227305337d2c7b7d5d046d6f646275735f726561645f504152414d4561491c00373e1c020c523139384114202e312c5c225231393921dc007d2e58003477053137323631363339303406730565321400387d5d046e6f7465626f785f74656d700d6d1034066305323e6d000c636172640160056d18766f6c746167651510fea602d2a602007449ee45b60997046d6945df05a3086d6178159f08617667150c0866696c653d002efeea0232ea0200746932f68c000033ee5602495661be00740948f68c00fe72036d7200740948f68c000035fe18012d180948f68c00eefa036dfa25a40948f28c000c65787054251aae4600017d106578705248c23a0000072e59040873053446b104144348414e47458d450c32066305f116d5ce446e616d655c055c2231305c222c5c2276616c89c042b504343135323731303333067305327d2c89b51114287d5d045f7265712e716973e57c003595ab0007a54e200137303936387d5d04fda314750531066305192aed5e1473746174757301920c36345c2252860014303937350673e118198601143aad050c464153541dfa003415940d6a04523009eaa5aa190b00321d0b043033190d0837303781b25292000c313033324a180121280002212c086c052212ab0804312221a3042c7b09032c22730531393335383238303125bcc570185f6865616c74680dba21240431303ebb000c746578742123003125b42555165d08146d6574686f640d1b147d2206500531ddd4c17c21b30830393501af0031019b2e1400107d5d04312c4a090908630531313e1e4e094226001e56091039303530392256091c5f656e762e6462734116003915c649152e7b0020357d5d0678055b7b2212b409007d5535043532114b059c568c07086305311ea509119f4e29000da201771c3638303031353837155e040431325c007d37086305310db84e5c0015294a5d00003311bb3a5d00559808630531f1d44e5c000d284a5a0000341d5a422d08086305313eb2003a24000d5212010b0038154b0c5f6c6f675d7500380df69529ee7402457404363846b503851504312c323d0451283114111d2eb700596204312c2e640200333e5101111d153d083039352e99012e6e030c630531370df6157c758d2e41000036353504312c3537086305313134153e29532e3b000035153b4eba010032bd0f114510646174612f2ec2011c2d716f2e6a736f6e0d5741d06dd61037317d5d0456c10300325114046903365a0036c9036a5c00a1e508312c3161ca00328d917da8003119d82e7c034dc4053591433e82003e30005e84000c3130303601e085ef1ee70d00335ed80009265e4c00cd2f327902003231fd3ea10041810c2d7169735276010c3130303701962ec600951605f8919c3e57004632005eae0008313030c1dd3aad0200332d864259004db55e4e00a1fe01b2059d716d3e9d00005f41720e380f56f6000c303935300144715f054c51ff424c0014656e762d6462624a0025d66d2c05492aa508320603012466d600854c328801005022af0d08630532911a3e9e002e870105315e620030313030347d5d7d04430533337d",

		// dev:868050045723075
		"0207500512016ea801d00a039b21f040020a0100012277223a31363833333101027b224e0322312c6d6f646275735f726561645f504152414d2e716f032263053132066203226e032273052266696c653a4e290080227d0468055b7b01313033330665052231227d5d046e6f7465626f785f74656d70054d1c75053206630534060950644205227b5c22636172645c0531322e312c5c22766f6c7461676515105c6f66666c696e655f6d696e735c0531342c5c22636f756e740121202c5c227365636f6e64011a050e34315c035c22636c6f7365645c05081d2c015b146176676f706e0d390c64635c05051608646376110a2475725c05317d2c5c2274094805100997046d69053905a3086d61780145050c08617667150c0866696c0597002e0544047332fe8c000d8c0948f68c000033fe8c000d8c0948f68c000034fe8c000d8c0948f68c000035fe8c000d8c0948f68c000036fe8c000d8c0948f28c000c65787054058eae46006139106578705248c23a0014072206690307893f2830323433067305327d2c7b050c407d5d047377697463685f73756d6d6172798d470c31066305919708690304894afe2d04d22d04fee90371e9fea50371a5fe61037161fe1d03711dfed90241d9180722066605327d452338227705313731353730383539310673a1b2361400087d5d042ea1060c464153544d35c17c0037cd7c5535045230c158a5ce045231190b00321d0b043033190d08373037a1f2007d529200083634374dbd19a6083634373a9200144348414e47451d9400353e94002c6e616d655c055c2231305c22e11504616c09815e760000394a760000393a76000050f5d218750533066305333e75000c523139380967182c5c225231393952e800183339333138303661a504337d2d7a11142c7d5d045f7265712e716973030e38080030156369de21151c3636373331323934052d086c6f672d0761d00038152f6dd00c746578742507250610616c657274e9d7146d6574686f640d1b147d22065005315221020438364621022c38367d5d045f656e762e646209a7157719a64d612437337d5d0678055b7b2212b10859810dc60432371eeb08107d5d04312c42ef080863053131671e3c093a24001a37093d1a2a3f0904312c4afc040863053111b211544226000d5610013033373411a21c045f6865616c74683d71003915fafe710131710437304671011037307d5d0425bd00731d7c00363e7c001473746174757321d40836345c21d552f2034178003151788d06414b36be0a75f408630531715d312d4a1c04312f08313033392f04312c1db408630532d16e1148151e0d3e2ec3010031357504312c32120311f61145111d3e440008333030555b3adc009d3e086305311e4b0b11512ede00152a0d5e01e000322e9a007d0500323e5402111d0d3c1dde0432382e44005d5508630531b15e118f191f464800368c00910b0863053191081545091c4a420039ae4e7c03003331b308690304114c10646174612f2e84031c2d716f2e6a736f6e1d5e4d580038a142568203003289da08227a7b425c00368c03665e000039c1a832730d5db5003251b53eba002edf0101306260000436324260000050d5010863053291976e61000531666200003125207507a1f2003231bb3e57000926624c00003565c4322b030032712b3e4b0061330c2d71697356b601183632327d5d042c59780197003351dd424c0049be66980085bc002c054429f30003464400414e0c66696c655a92000835363805922e6d03bd793299020125082d64625e4a00043734054a690f01950032717042d900086c6f6766d600e503327c02952b055691553e56002e7e020932626400043632a1f608312c31015100310df04640073c360665052231227d5d7d04430533337d",

		// dev:868050045723075
		"02070b0312016ea8018b06038b10f04202080100012277223a3137343101027b224e0322312c636f6e6669726d6174696f6e5f6d657373616765732e7169032263053132066203226e032273052266696c653a5e2d00a0227d0468055b7b013531323335370665052231227d5d0473657475702e716f03227505310663053306094f606903044205227b5c226d61635c055c22315c227d2206660532094718227305317d2c7b0541086e645f0d951d480438060548003215484c434f42535f6d61726b65725c0532312c5c2269647259005ec900100322630537095e098c3ed300523900345f656e637279707465642e7169730144003409440c22690307351a083135363ad3002e3800046f7331263175e6de00185f6865616c74683d32003615902d7a0c746578742d22642c5c22616c6572745c05082c5c22766f6c746167655c0531322e2149106d6574686f3d4d085005314eaa0104312c39ed086305390d6f5138111c51281034313734335928185f656e762e6462253a0031093b2d7e052900355151140678055b7b2225fc355a107d5d7d5d045ac7022e60012998043135095f159a8ad00111b514353132323136118c05f23a9e020c630531303a60000073362400114c05d83901213e194c2eb7004117086305312d1615b72e5700362f005a62000c5f6c6f675d1031075564fe1002461002157208630531710f51100d1c5aac0004312c2e1102003251bc153d4d2e323e0055240c04312c31618200310d3752490201637d2408630531919b1565151f32670039b3002c2e8301255a086305323d57114910646174612f2e2c001c2d716f2e6a736f6e0d58047d5d364b0036ce0105ca8d9121ad62560019370c2d716f73466100b18908630531ad3e4a4f00087475704a9e002dad018b003231c9046903368b0001244a3b00525e03d15d91253e4c00523500082d71692ed500618d08333930213d510f05a031c73e54000125082d64624219010535bd71326001205f6e6f746566696c65423700591e0541719e42760049459e190139c4002e8daf0032914f3e5a005224011940082d716932b400212f2c3135377d5d7d04430532377d",
	}

	for i, hexBuffer := range hexBuffers {
		t.Run(fmt.Sprintf("Buffer_%d", i+1), func(t *testing.T) {
			wireBytes, err := hex.DecodeString(hexBuffer)
			if err != nil {
				t.Fatalf("Failed to decode hex buffer %d: %v", i+1, err)
			}

			msg, wirelen, err := msgFromWireTrace(context.Background(), wireBytes, true)
			if err != nil {
				t.Errorf("MsgFromWire failed for buffer %d: %v", i+1, err)
			} else {
				t.Logf("Buffer %d SUCCESS: wirelen=%d", i+1, wirelen)
				t.Logf("  Message Type: %s", msg.MessageType)
				t.Logf("  Device UID: %s", msg.DeviceUID)
				t.Logf("  Product UID: %s", msg.ProductUID)
				if msg.Error != "" {
					t.Logf("  Error: %s", msg.Error)
				}
			}
		})
	}
}
