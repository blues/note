// Code generated by protoc-gen-go. DO NOT EDIT.
// source: notehub.proto

/*
Package notelib is a generated protocol buffer package.

Package notelib notehub.proto are the protocol definitions for notebox-notehub comms

It is generated from these files:
	notehub.proto

It has these top-level messages:
	NotehubPB
*/
package notelib

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NotehubPB struct {
	Version                        *int64  `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	MessageType                    *string `protobuf:"bytes,2,opt,name=MessageType" json:"MessageType,omitempty"`
	Error                          *string `protobuf:"bytes,3,opt,name=Error" json:"Error,omitempty"`
	DeviceUID                      *string `protobuf:"bytes,4,opt,name=DeviceUID" json:"DeviceUID,omitempty"`
	DeviceEndpointID               *string `protobuf:"bytes,5,opt,name=DeviceEndpointID" json:"DeviceEndpointID,omitempty"`
	HubTimeNs                      *int64  `protobuf:"varint,6,opt,name=HubTimeNs" json:"HubTimeNs,omitempty"`
	HubEndpointID                  *string `protobuf:"bytes,7,opt,name=HubEndpointID" json:"HubEndpointID,omitempty"`
	HubSessionTicket               *string `protobuf:"bytes,8,opt,name=HubSessionTicket" json:"HubSessionTicket,omitempty"`
	HubSessionHandler              *string `protobuf:"bytes,9,opt,name=HubSessionHandler" json:"HubSessionHandler,omitempty"`
	HubSessionTicketExpiresTimeSec *int64  `protobuf:"varint,10,opt,name=HubSessionTicketExpiresTimeSec" json:"HubSessionTicketExpiresTimeSec,omitempty"`
	NotefileID                     *string `protobuf:"bytes,11,opt,name=NotefileID" json:"NotefileID,omitempty"`
	NotefileIDs                    *string `protobuf:"bytes,12,opt,name=NotefileIDs" json:"NotefileIDs,omitempty"`
	Since                          *int64  `protobuf:"varint,13,opt,name=Since" json:"Since,omitempty"`
	Until                          *int64  `protobuf:"varint,14,opt,name=Until" json:"Until,omitempty"`
	MaxChanges                     *int64  `protobuf:"varint,15,opt,name=MaxChanges" json:"MaxChanges,omitempty"`
	DeviceSN                       *string `protobuf:"bytes,16,opt,name=DeviceSN" json:"DeviceSN,omitempty"`
	NoteID                         *string `protobuf:"bytes,17,opt,name=NoteID" json:"NoteID,omitempty"`
	SessionIDPrev                  *int64  `protobuf:"varint,18,opt,name=SessionIDPrev" json:"SessionIDPrev,omitempty"`
	SessionIDNext                  *int64  `protobuf:"varint,19,opt,name=SessionIDNext" json:"SessionIDNext,omitempty"`
	SessionIDMismatch              *bool   `protobuf:"varint,20,opt,name=SessionIDMismatch" json:"SessionIDMismatch,omitempty"`
	Bytes1                         *int64  `protobuf:"varint,21,opt,name=Bytes1" json:"Bytes1,omitempty"`
	Bytes2                         *int64  `protobuf:"varint,22,opt,name=Bytes2" json:"Bytes2,omitempty"`
	Bytes3                         *int64  `protobuf:"varint,23,opt,name=Bytes3" json:"Bytes3,omitempty"`
	Bytes4                         *int64  `protobuf:"varint,24,opt,name=Bytes4" json:"Bytes4,omitempty"`
	ProductUID                     *string `protobuf:"bytes,25,opt,name=ProductUID" json:"ProductUID,omitempty"`
	UsageProvisioned               *int64  `protobuf:"varint,26,opt,name=UsageProvisioned" json:"UsageProvisioned,omitempty"`
	UsageRcvdBytes                 *uint32 `protobuf:"varint,27,opt,name=UsageRcvdBytes" json:"UsageRcvdBytes,omitempty"`
	UsageSentBytes                 *uint32 `protobuf:"varint,28,opt,name=UsageSentBytes" json:"UsageSentBytes,omitempty"`
	UsageTCPSessions               *uint32 `protobuf:"varint,29,opt,name=UsageTCPSessions" json:"UsageTCPSessions,omitempty"`
	UsageTLSSessions               *uint32 `protobuf:"varint,30,opt,name=UsageTLSSessions" json:"UsageTLSSessions,omitempty"`
	UsageRcvdNotes                 *uint32 `protobuf:"varint,31,opt,name=UsageRcvdNotes" json:"UsageRcvdNotes,omitempty"`
	UsageSentNotes                 *uint32 `protobuf:"varint,32,opt,name=UsageSentNotes" json:"UsageSentNotes,omitempty"`
	CellID                         *string `protobuf:"bytes,33,opt,name=CellID" json:"CellID,omitempty"`
	NotificationSession            *bool   `protobuf:"varint,34,opt,name=NotificationSession" json:"NotificationSession,omitempty"`
	Voltage100                     *int32  `protobuf:"varint,35,opt,name=Voltage100" json:"Voltage100,omitempty"`
	Temp100                        *int32  `protobuf:"varint,36,opt,name=Temp100" json:"Temp100,omitempty"`
	ContinuousSession              *bool   `protobuf:"varint,37,opt,name=ContinuousSession" json:"ContinuousSession,omitempty"`
	MotionSecs                     *int64  `protobuf:"varint,38,opt,name=MotionSecs" json:"MotionSecs,omitempty"`
	MotionOrientation              *string `protobuf:"bytes,39,opt,name=MotionOrientation" json:"MotionOrientation,omitempty"`
	SessionTrigger                 *string `protobuf:"bytes,40,opt,name=SessionTrigger" json:"SessionTrigger,omitempty"`
	XXX_unrecognized               []byte  `json:"-"`
}

func (m *NotehubPB) Reset()                    { *m = NotehubPB{} }
func (m *NotehubPB) String() string            { return proto.CompactTextString(m) }
func (*NotehubPB) ProtoMessage()               {}
func (*NotehubPB) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NotehubPB) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *NotehubPB) GetMessageType() string {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return ""
}

func (m *NotehubPB) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *NotehubPB) GetDeviceUID() string {
	if m != nil && m.DeviceUID != nil {
		return *m.DeviceUID
	}
	return ""
}

func (m *NotehubPB) GetDeviceEndpointID() string {
	if m != nil && m.DeviceEndpointID != nil {
		return *m.DeviceEndpointID
	}
	return ""
}

func (m *NotehubPB) GetHubTimeNs() int64 {
	if m != nil && m.HubTimeNs != nil {
		return *m.HubTimeNs
	}
	return 0
}

func (m *NotehubPB) GetHubEndpointID() string {
	if m != nil && m.HubEndpointID != nil {
		return *m.HubEndpointID
	}
	return ""
}

func (m *NotehubPB) GetHubSessionTicket() string {
	if m != nil && m.HubSessionTicket != nil {
		return *m.HubSessionTicket
	}
	return ""
}

func (m *NotehubPB) GetHubSessionHandler() string {
	if m != nil && m.HubSessionHandler != nil {
		return *m.HubSessionHandler
	}
	return ""
}

func (m *NotehubPB) GetHubSessionTicketExpiresTimeSec() int64 {
	if m != nil && m.HubSessionTicketExpiresTimeSec != nil {
		return *m.HubSessionTicketExpiresTimeSec
	}
	return 0
}

func (m *NotehubPB) GetNotefileID() string {
	if m != nil && m.NotefileID != nil {
		return *m.NotefileID
	}
	return ""
}

func (m *NotehubPB) GetNotefileIDs() string {
	if m != nil && m.NotefileIDs != nil {
		return *m.NotefileIDs
	}
	return ""
}

func (m *NotehubPB) GetSince() int64 {
	if m != nil && m.Since != nil {
		return *m.Since
	}
	return 0
}

func (m *NotehubPB) GetUntil() int64 {
	if m != nil && m.Until != nil {
		return *m.Until
	}
	return 0
}

func (m *NotehubPB) GetMaxChanges() int64 {
	if m != nil && m.MaxChanges != nil {
		return *m.MaxChanges
	}
	return 0
}

func (m *NotehubPB) GetDeviceSN() string {
	if m != nil && m.DeviceSN != nil {
		return *m.DeviceSN
	}
	return ""
}

func (m *NotehubPB) GetNoteID() string {
	if m != nil && m.NoteID != nil {
		return *m.NoteID
	}
	return ""
}

func (m *NotehubPB) GetSessionIDPrev() int64 {
	if m != nil && m.SessionIDPrev != nil {
		return *m.SessionIDPrev
	}
	return 0
}

func (m *NotehubPB) GetSessionIDNext() int64 {
	if m != nil && m.SessionIDNext != nil {
		return *m.SessionIDNext
	}
	return 0
}

func (m *NotehubPB) GetSessionIDMismatch() bool {
	if m != nil && m.SessionIDMismatch != nil {
		return *m.SessionIDMismatch
	}
	return false
}

func (m *NotehubPB) GetBytes1() int64 {
	if m != nil && m.Bytes1 != nil {
		return *m.Bytes1
	}
	return 0
}

func (m *NotehubPB) GetBytes2() int64 {
	if m != nil && m.Bytes2 != nil {
		return *m.Bytes2
	}
	return 0
}

func (m *NotehubPB) GetBytes3() int64 {
	if m != nil && m.Bytes3 != nil {
		return *m.Bytes3
	}
	return 0
}

func (m *NotehubPB) GetBytes4() int64 {
	if m != nil && m.Bytes4 != nil {
		return *m.Bytes4
	}
	return 0
}

func (m *NotehubPB) GetProductUID() string {
	if m != nil && m.ProductUID != nil {
		return *m.ProductUID
	}
	return ""
}

func (m *NotehubPB) GetUsageProvisioned() int64 {
	if m != nil && m.UsageProvisioned != nil {
		return *m.UsageProvisioned
	}
	return 0
}

func (m *NotehubPB) GetUsageRcvdBytes() uint32 {
	if m != nil && m.UsageRcvdBytes != nil {
		return *m.UsageRcvdBytes
	}
	return 0
}

func (m *NotehubPB) GetUsageSentBytes() uint32 {
	if m != nil && m.UsageSentBytes != nil {
		return *m.UsageSentBytes
	}
	return 0
}

func (m *NotehubPB) GetUsageTCPSessions() uint32 {
	if m != nil && m.UsageTCPSessions != nil {
		return *m.UsageTCPSessions
	}
	return 0
}

func (m *NotehubPB) GetUsageTLSSessions() uint32 {
	if m != nil && m.UsageTLSSessions != nil {
		return *m.UsageTLSSessions
	}
	return 0
}

func (m *NotehubPB) GetUsageRcvdNotes() uint32 {
	if m != nil && m.UsageRcvdNotes != nil {
		return *m.UsageRcvdNotes
	}
	return 0
}

func (m *NotehubPB) GetUsageSentNotes() uint32 {
	if m != nil && m.UsageSentNotes != nil {
		return *m.UsageSentNotes
	}
	return 0
}

func (m *NotehubPB) GetCellID() string {
	if m != nil && m.CellID != nil {
		return *m.CellID
	}
	return ""
}

func (m *NotehubPB) GetNotificationSession() bool {
	if m != nil && m.NotificationSession != nil {
		return *m.NotificationSession
	}
	return false
}

func (m *NotehubPB) GetVoltage100() int32 {
	if m != nil && m.Voltage100 != nil {
		return *m.Voltage100
	}
	return 0
}

func (m *NotehubPB) GetTemp100() int32 {
	if m != nil && m.Temp100 != nil {
		return *m.Temp100
	}
	return 0
}

func (m *NotehubPB) GetContinuousSession() bool {
	if m != nil && m.ContinuousSession != nil {
		return *m.ContinuousSession
	}
	return false
}

func (m *NotehubPB) GetMotionSecs() int64 {
	if m != nil && m.MotionSecs != nil {
		return *m.MotionSecs
	}
	return 0
}

func (m *NotehubPB) GetMotionOrientation() string {
	if m != nil && m.MotionOrientation != nil {
		return *m.MotionOrientation
	}
	return ""
}

func (m *NotehubPB) GetSessionTrigger() string {
	if m != nil && m.SessionTrigger != nil {
		return *m.SessionTrigger
	}
	return ""
}

func init() {
	proto.RegisterType((*NotehubPB)(nil), "notelib.NotehubPB")
}

func init() { proto.RegisterFile("notehub.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x6f, 0x4f, 0xdb, 0x3a,
	0x14, 0xc6, 0xd5, 0xcb, 0xe5, 0x4f, 0xcd, 0x2d, 0x17, 0x0c, 0x97, 0x7b, 0xc6, 0x18, 0xcb, 0x18,
	0x63, 0xd5, 0x34, 0x4d, 0xfc, 0xfb, 0x04, 0x34, 0x4c, 0xad, 0x34, 0xba, 0xaa, 0x2d, 0xbc, 0x4f,
	0xd3, 0x43, 0xb1, 0x16, 0xec, 0xca, 0x76, 0x2a, 0xf8, 0x20, 0xfb, 0xbe, 0xd3, 0xb1, 0xdb, 0x24,
	0x4d, 0x26, 0xed, 0xe5, 0xf3, 0x7b, 0x1e, 0x9d, 0x73, 0xe2, 0x63, 0x87, 0x35, 0xa4, 0xb2, 0xf8,
	0x98, 0x8e, 0xbe, 0x4c, 0xb5, 0xb2, 0x8a, 0xaf, 0x93, 0x4c, 0xc4, 0xe8, 0xf8, 0xe7, 0x26, 0xab,
	0x77, 0xbd, 0xd5, 0xbb, 0xe6, 0xc0, 0xd6, 0xef, 0x51, 0x1b, 0xa1, 0x24, 0xd4, 0x82, 0x5a, 0x73,
	0xa5, 0xbf, 0x90, 0x3c, 0x60, 0x9b, 0xb7, 0x68, 0x4c, 0x34, 0xc1, 0xe1, 0xcb, 0x14, 0xe1, 0xaf,
	0xa0, 0xd6, 0xac, 0xf7, 0x8b, 0x88, 0xef, 0xb1, 0xd5, 0x1b, 0xad, 0x95, 0x86, 0x15, 0xe7, 0x79,
	0xc1, 0x0f, 0x59, 0x3d, 0xc4, 0x99, 0x88, 0xf1, 0xae, 0x13, 0xc2, 0xdf, 0xce, 0xc9, 0x01, 0xff,
	0xc4, 0xb6, 0xbd, 0xb8, 0x91, 0xe3, 0xa9, 0x12, 0xd2, 0x76, 0x42, 0x58, 0x75, 0xa1, 0x0a, 0xa7,
	0x4a, 0xed, 0x74, 0x34, 0x14, 0x4f, 0xd8, 0x35, 0xb0, 0xe6, 0xa6, 0xcb, 0x01, 0x3f, 0x61, 0x8d,
	0x76, 0x3a, 0x2a, 0x94, 0x59, 0x77, 0x65, 0x96, 0x21, 0xf5, 0x6b, 0xa7, 0xa3, 0x01, 0x1a, 0xfa,
	0xa6, 0xa1, 0x88, 0x7f, 0xa0, 0x85, 0x0d, 0xdf, 0xaf, 0xcc, 0xf9, 0x67, 0xb6, 0x93, 0xb3, 0x76,
	0x24, 0xc7, 0x09, 0x6a, 0xa8, 0xbb, 0x70, 0xd5, 0xe0, 0x5f, 0xd9, 0x51, 0xb9, 0xc2, 0xcd, 0xf3,
	0x54, 0x68, 0x34, 0x34, 0xe0, 0x00, 0x63, 0x60, 0x6e, 0xe4, 0x3f, 0xa4, 0xf8, 0x11, 0x63, 0xb4,
	0x8e, 0x07, 0x91, 0x60, 0x27, 0x84, 0x4d, 0xd7, 0xae, 0x40, 0x68, 0x0f, 0xb9, 0x32, 0xf0, 0x8f,
	0xdf, 0x43, 0x01, 0xd1, 0x1e, 0x06, 0x42, 0xc6, 0x08, 0x0d, 0xd7, 0xd0, 0x0b, 0xa2, 0x77, 0xd2,
	0x8a, 0x04, 0xb6, 0x3c, 0x75, 0x82, 0xba, 0xdd, 0x46, 0xcf, 0xad, 0xc7, 0x48, 0x4e, 0xd0, 0xc0,
	0xbf, 0xce, 0x2a, 0x10, 0x7e, 0xc0, 0x36, 0xfc, 0x1e, 0x06, 0x5d, 0xd8, 0x76, 0xad, 0x32, 0xcd,
	0xf7, 0xd9, 0x1a, 0xb5, 0xed, 0x84, 0xb0, 0xe3, 0x9c, 0xb9, 0xa2, 0x4d, 0xcc, 0x3f, 0xb0, 0x13,
	0xf6, 0x34, 0xce, 0x80, 0xbb, 0xb2, 0xcb, 0x70, 0x29, 0xd5, 0xc5, 0x67, 0x0b, 0xbb, 0xa5, 0x14,
	0x41, 0xda, 0x41, 0x06, 0x6e, 0x85, 0x79, 0x8a, 0x6c, 0xfc, 0x08, 0x7b, 0x41, 0xad, 0xb9, 0xd1,
	0xaf, 0x1a, 0x34, 0xd1, 0xf5, 0x8b, 0x45, 0x73, 0x0e, 0xff, 0xb9, 0x62, 0x73, 0x95, 0xf1, 0x0b,
	0xd8, 0x2f, 0xf0, 0x8b, 0x8c, 0x5f, 0xc2, 0xff, 0x05, 0x7e, 0x99, 0xf1, 0x2b, 0x80, 0x02, 0xbf,
	0xa2, 0xd3, 0xea, 0x69, 0x35, 0x4e, 0x63, 0x4b, 0x97, 0xf9, 0x95, 0xdf, 0x4d, 0x4e, 0xe8, 0x76,
	0xdd, 0xd1, 0x73, 0xe8, 0x69, 0x35, 0x13, 0x34, 0x1b, 0x8e, 0xe1, 0xc0, 0x55, 0xa8, 0x70, 0x7e,
	0xca, 0xb6, 0x1c, 0xeb, 0xc7, 0xb3, 0xb1, 0x2b, 0x0f, 0xaf, 0x83, 0x5a, 0xb3, 0xd1, 0x2f, 0xd1,
	0x2c, 0x37, 0x40, 0x69, 0x7d, 0xee, 0xb0, 0x90, 0xcb, 0x68, 0xd6, 0x7b, 0xd8, 0xea, 0xcd, 0x0f,
	0xc6, 0xc0, 0x1b, 0x97, 0xac, 0xf0, 0x3c, 0xfb, 0x6d, 0x90, 0x65, 0x8f, 0x8a, 0xd9, 0x9c, 0x2f,
	0xcd, 0x49, 0x0b, 0x36, 0xf0, 0xb6, 0x34, 0xa7, 0xa3, 0x4b, 0x73, 0xfa, 0x5c, 0x50, 0x9a, 0xd3,
	0xe7, 0xf6, 0xd9, 0x5a, 0x0b, 0x93, 0xa4, 0x13, 0xc2, 0x3b, 0x7f, 0x6b, 0xbc, 0xe2, 0x67, 0x6c,
	0xb7, 0xab, 0xac, 0x78, 0x10, 0x71, 0x64, 0x85, 0x92, 0xf3, 0xfe, 0x70, 0xec, 0x76, 0xfd, 0x3b,
	0x8b, 0xb6, 0x71, 0xaf, 0x12, 0x1b, 0x4d, 0xf0, 0xfc, 0xec, 0x0c, 0xde, 0x07, 0xb5, 0xe6, 0x6a,
	0xbf, 0x40, 0xe8, 0x5f, 0x36, 0xc4, 0xa7, 0x29, 0x99, 0x27, 0xce, 0x5c, 0x48, 0xba, 0x55, 0x2d,
	0x25, 0xad, 0x90, 0xa9, 0x4a, 0xcd, 0xa2, 0xd3, 0x07, 0x7f, 0xab, 0x2a, 0x86, 0x7b, 0x23, 0xca,
	0x37, 0x8e, 0x0d, 0x9c, 0xce, 0xdf, 0x48, 0x46, 0xa8, 0x9a, 0x57, 0xdf, 0xb5, 0x40, 0x69, 0xdd,
	0x8c, 0xf0, 0xd1, 0xff, 0x27, 0x2a, 0x06, 0x9d, 0xd3, 0xe2, 0xf9, 0x6b, 0x31, 0x99, 0xa0, 0x86,
	0xa6, 0x8b, 0x96, 0xe8, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x8a, 0xa3, 0x16, 0xb0, 0x05,
	0x00, 0x00,
}
